
#=========================================
Tseries - Meteorological Timeseries Viewer
#=========================================

Norwegian Meteorological Institute (met.no)
Box 43 Blindern
0313 OSLO
NORWAY
email: diana@met.no

Contents:
1. About Tseries
2. Install
3. Running Tseries
4. Configuration files
5. File formats

#-------------------------------------------
# 1. About Tseries
#-------------------------------------------

Tseries is part of the Diana package from met.no (Norwegian Meteorological Institute) and is distributed under the GPL license. See gpl.txt for details concerning the GPL license.

Tseries is a graphical time series viewer developed for use with meteorological and oceanographic data. It uses OpenGL for the graphics and Trolltech Qt for the user interface.

Tseries supports multiple languages via the Qt linguist system. Additional languages can be added by preparing new lang/tseries_XX.ts files (using the Qt linguist program) and adding the new language in the proper place in the Makefiles. 

In addition to the interactive viewer, there is also a command line version of Tseries for batch plotting of time series diagrams (btseries).

Depends on:
Trolltech Qt
OpenGl
HDF 4.2


#-------------------------------------------
# 2. Install
#-------------------------------------------


The included libraries needed for Tseries:
get metlibs from https://svn.met.no/metlibs/
compile og install them in a proper place.

export PACKAGE_CONFIG_PATH=where_you_installed_metlibs/lib/pkgconfig

./autogen.sh
./configure
make; 
make install

#-------------------------------------------
# 3. Running Tseries
#-------------------------------------------

running Tseries with the prepared test datasets and configurations:

1. The test data sets should be installed under metnolocal/demodata/

2. Starting Tseries:
cd metnolocal/tseries
bin/tseries -s tseries.ctl_export

Select the language of preference under "Preferences | languages" in the menu.
User guide available under Help.


running btseries:
The batch version of this plotting package is called btseries and will be installed in the same place as Tseries. Try "bin/btseries" for command line help, and "bin/btseries -example" to dump a complete job control file.

#-------------------------------------------
# 4. Configuration files
#-------------------------------------------

tseries.ctl_export:
  The setup file for Tseries. 
  Change top level directory for installation with 'Topdir' variable
  Add new datafiles under section <streams> 

etc/tsDiagrams_export.def:
  Definition of diagram types with supported data
  See comments in file for syntax
  IMPORTANT: if you change the top level directory in tseries.ctl_export,
  you must also update the style paths here (see STYLEFILE=)

.tseries.conf:
  User preferences saved here.

etc/tseries.filter:
  User defined position filter saved here (see online doc)

etc/symbols.def:
  Weather symbol mapping

style/style.*
  Detailed instructions for the plotting package (in ascii). 
  Determines which components to add to a specific diagram.
  Used in etc/tsDiagrams_export.def. The structure of these files
  is currently undocumented.

#-------------------------------------------
# 5. File formats
#-------------------------------------------

Tseries supports a number of in-house (met.no) formats. 

1. The most commonly used is the HDF 4.2 based format. In the <streams> section of the setup file you will find references to files of this type with "DataType=HDF". 
The exact specification for this format is omitted here; mainly because we intend to make changes to this format in the near future. If you are still interested: use the 'vshow' program that comes with the HDF4.2 package to view the structure of one the files in the test data set.

2. Tseries also supports a simple ascii format. See the test data file metnolocal/demodata/hirlam/t2m_lqr.txt for a complete example. 
Here is a short definition:

# --------------------------------------
# Example time series data file in ascii
# --------------------------------------

#- source name, runtime
Model=HIRLAM20, 2006-05-24 00:00:00

#-----------------
# New position
#-----------------
#- Name of position, longitude, latitude
Position=GARDERMOEN, 11.1, 60.2

#- Data-header
#  the Time and Level specification is mandatory
#  Add your own parameters after these (defined properly in etc/parameters.def)
Time                  Level     MSLP    TT
#- Data-table matching header
2006-05-23 18:00:00   0         1000.1  23.3
2006-05-24 00:00:00   0         999.9   16.4
.....

#-----------------
# Start a new position with Position=
#-----------------
#- Name of position, longitude, latitude
Position=X,....
....
# End of Ascii file format description


